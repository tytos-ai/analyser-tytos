[system]
debug_mode = true
process_loop_ms = 30000
pnl_parallel_batch_size = 20

# Using Zerion+BirdEye hybrid: Zerion for transactions, BirdEye for current portfolio

[multichain]
enabled_chains = ["solana", "ethereum", "base", "binance-smart-chain"]
default_chain = "solana"

[redis]
url = "redis://localhost:6379"
default_lock_ttl_seconds = 600


# DexScreener configuration for boosted token discovery
[dexscreener]
api_base_url = "https://api.dexscreener.com"
request_timeout_seconds = 30
rate_limit_delay_ms = 1000  # 60 requests per minute = 1 request per second
max_retries = 3
enabled = true
min_boost_amount = 100.0    # Minimum boost amount to consider
max_boosted_tokens = 25     # Limit boosted tokens for quality filtering
scraperapi_key = "88313baee2043c1503199e462e1b3b7f"  # ScraperAPI key for Cloudflare bypass

# Retry configuration for external API calls (BirdEye, Zerion)
[retry]
max_attempts = 3
# Rate limit (429) retry delays in milliseconds
rate_limit_delays_ms = [500, 1000, 2000]
# Server error (5xx) retry delays in milliseconds
server_error_delays_ms = [300, 600, 1200]
# Timeout retry delays in milliseconds
timeout_delays_ms = [500, 1000]

# BirdEye configuration - used only for current portfolio fetching in hybrid mode
[birdeye]
api_key = "5ff313b239ac42e297b830b10ea1871d"
api_base_url = "https://public-api.birdeye.so"
request_timeout_seconds = 30

# Zerion API configuration (alternative to BirdEye)
[zerion]
api_key = "zk_prod_b0bbb7857c74422582eb39d50f970006"
api_base_url = "https://api.zerion.io"
request_timeout_seconds = 30
enabled = true
default_currency = "usd"
default_max_transactions = 1000
rate_limit_delay_ms = 200
page_size = 100
operation_types = "trade,send,receive"
chain_ids = "solana,ethereum,base,binance-smart-chain"
trash_filter = "only_non_trash"

# PnL filtering configuration section removed - these were never used in actual P&L processing
# All P&L calculations are performed without filtering based on capital, hold time, trades, or win rate
# Trader filtering configs also removed - they were defined but never actually used

[api]
host = "0.0.0.0"
port = 8080

[database]
postgres_url = "postgresql://root:Great222*@localhost:5432/analyser"
enabled = true